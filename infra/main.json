{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.37.4.10188",
      "templateHash": "14425611440024734368"
    }
  },
  "parameters": {
    "appName": {
      "type": "string",
      "defaultValue": "todolist",
      "metadata": {
        "description": "Application name - used as a prefix for all resources"
      }
    },
    "environment": {
      "type": "string",
      "defaultValue": "dev",
      "allowedValues": [
        "dev",
        "staging",
        "prod"
      ],
      "metadata": {
        "description": "Environment name (dev, staging, prod)"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Azure region for all resources"
      }
    },
    "imageTag": {
      "type": "string",
      "defaultValue": "latest",
      "metadata": {
        "description": "Container image tag to deploy"
      }
    },
    "acrName": {
      "type": "string",
      "defaultValue": "[format('{0}acr{1}', parameters('appName'), parameters('environment'))]",
      "metadata": {
        "description": "Azure Container Registry name"
      }
    },
    "postgresqlAdminLogin": {
      "type": "string",
      "defaultValue": "todolistadmin",
      "metadata": {
        "description": "PostgreSQL administrator username"
      }
    },
    "postgresqlAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "PostgreSQL administrator password"
      }
    },
    "tags": {
      "type": "object",
      "defaultValue": {
        "application": "[parameters('appName')]",
        "environment": "[parameters('environment')]",
        "managed-by": "bicep"
      },
      "metadata": {
        "description": "Resource tags to apply to all resources"
      }
    }
  },
  "variables": {
    "keyVaultName": "[take(format('{0}-kv-{1}-{2}', parameters('appName'), parameters('environment'), uniqueString(resourceGroup().id)), 24)]",
    "logAnalyticsName": "[format('{0}-logs-{1}', parameters('appName'), parameters('environment'))]",
    "postgresqlServerName": "[format('{0}-db-{1}', parameters('appName'), parameters('environment'))]",
    "acaEnvironmentName": "[format('{0}-env-{1}', parameters('appName'), parameters('environment'))]",
    "acaAppName": "[format('{0}-app-{1}', parameters('appName'), parameters('environment'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "logAnalytics",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[variables('logAnalyticsName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "17019299119846069615"
            }
          },
          "parameters": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "Log Analytics Workspace for centralized logging and monitoring"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "retentionInDays": {
              "type": "int",
              "defaultValue": 30,
              "metadata": {
                "description": "Log retention in days"
              }
            },
            "dailyQuotaGb": {
              "type": "int",
              "defaultValue": -1,
              "metadata": {
                "description": "Daily quota in GB (-1 for unlimited)"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2023-09-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "sku": {
                  "name": "PerGB2018"
                },
                "retentionInDays": "[parameters('retentionInDays')]",
                "workspaceCapping": "[if(greater(parameters('dailyQuotaGb'), 0), createObject('dailyQuotaGb', parameters('dailyQuotaGb')), null())]",
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled"
              }
            }
          ],
          "outputs": {
            "workspaceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('name'))]"
            },
            "customerId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.OperationalInsights/workspaces', parameters('name')), '2023-09-01').customerId]"
            },
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "keyVault",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[variables('keyVaultName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "16325096567097572180"
            }
          },
          "parameters": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "Azure Key Vault for secure secrets management"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "skuName": {
              "type": "string",
              "defaultValue": "standard",
              "allowedValues": [
                "standard",
                "premium"
              ],
              "metadata": {
                "description": "SKU name for the Key Vault"
              }
            },
            "accessPolicies": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Access policies for the Key Vault"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2023-07-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "sku": {
                  "family": "A",
                  "name": "[parameters('skuName')]"
                },
                "tenantId": "[tenant().tenantId]",
                "enabledForDeployment": false,
                "enabledForDiskEncryption": false,
                "enabledForTemplateDeployment": true,
                "enableSoftDelete": true,
                "softDeleteRetentionInDays": 7,
                "enablePurgeProtection": false,
                "enableRbacAuthorization": true,
                "publicNetworkAccess": "Enabled",
                "accessPolicies": "[parameters('accessPolicies')]",
                "networkAcls": {
                  "bypass": "AzureServices",
                  "defaultAction": "Allow"
                }
              }
            }
          ],
          "outputs": {
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.KeyVault/vaults', parameters('name'))]"
            },
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            },
            "vaultUri": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.KeyVault/vaults', parameters('name')), '2023-07-01').vaultUri]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "containerRegistry",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[parameters('acrName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "10569444272507000045"
            }
          },
          "parameters": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "Azure Container Registry for private container images"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "sku": {
              "type": "string",
              "defaultValue": "Basic",
              "allowedValues": [
                "Basic",
                "Standard",
                "Premium"
              ],
              "metadata": {
                "description": "SKU for the Container Registry"
              }
            },
            "adminUserEnabled": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Enable admin user access"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.ContainerRegistry/registries",
              "apiVersion": "2023-07-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "sku": {
                "name": "[parameters('sku')]"
              },
              "properties": {
                "adminUserEnabled": "[parameters('adminUserEnabled')]",
                "policies": {
                  "quarantinePolicy": {
                    "status": "disabled"
                  },
                  "trustPolicy": {
                    "type": "Notary",
                    "status": "disabled"
                  },
                  "retentionPolicy": {
                    "days": 7,
                    "status": "disabled"
                  }
                },
                "encryption": {
                  "status": "disabled"
                },
                "dataEndpointEnabled": false,
                "publicNetworkAccess": "Enabled",
                "networkRuleBypassOptions": "AzureServices"
              }
            },
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2023-01-31",
              "name": "[format('{0}-identity', parameters('name'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]"
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.ContainerRegistry/registries/{0}', parameters('name'))]",
              "name": "[guid(resourceId('Microsoft.ContainerRegistry/registries', parameters('name')), resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity', parameters('name'))), 'AcrPull')]",
              "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '7f951dda-4ed3-4680-a7ca-43fe172d538d')]",
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity', parameters('name'))), '2023-01-31').principalId]",
                "principalType": "ServicePrincipal"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ContainerRegistry/registries', parameters('name'))]",
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity', parameters('name')))]"
              ]
            }
          ],
          "outputs": {
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.ContainerRegistry/registries', parameters('name'))]"
            },
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            },
            "loginServer": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ContainerRegistry/registries', parameters('name')), '2023-07-01').loginServer]"
            },
            "managedIdentityId": {
              "type": "string",
              "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity', parameters('name')))]"
            },
            "managedIdentityClientId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity', parameters('name'))), '2023-01-31').clientId]"
            },
            "managedIdentityPrincipalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity', parameters('name'))), '2023-01-31').principalId]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "postgresql",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "serverName": {
            "value": "[variables('postgresqlServerName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "administratorLogin": {
            "value": "[parameters('postgresqlAdminLogin')]"
          },
          "administratorPassword": {
            "value": "[parameters('postgresqlAdminPassword')]"
          },
          "keyVaultName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'keyVault'), '2022-09-01').outputs.name.value]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "9219272406092520911"
            }
          },
          "parameters": {
            "serverName": {
              "type": "string",
              "metadata": {
                "description": "Azure PostgreSQL Flexible Server for the TodoList application"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "version": {
              "type": "string",
              "defaultValue": "15",
              "allowedValues": [
                "11",
                "12",
                "13",
                "14",
                "15",
                "16"
              ],
              "metadata": {
                "description": "PostgreSQL server version"
              }
            },
            "administratorLogin": {
              "type": "string",
              "metadata": {
                "description": "Administrator login username"
              }
            },
            "administratorPassword": {
              "type": "securestring",
              "metadata": {
                "description": "Administrator login password"
              }
            },
            "skuName": {
              "type": "string",
              "defaultValue": "Standard_B1ms",
              "metadata": {
                "description": "SKU name for the PostgreSQL server"
              }
            },
            "skuTier": {
              "type": "string",
              "defaultValue": "Burstable",
              "allowedValues": [
                "Burstable",
                "GeneralPurpose",
                "MemoryOptimized"
              ],
              "metadata": {
                "description": "SKU tier for the PostgreSQL server"
              }
            },
            "storageSizeGB": {
              "type": "int",
              "defaultValue": 32,
              "metadata": {
                "description": "Storage size in GB"
              }
            },
            "keyVaultName": {
              "type": "string",
              "metadata": {
                "description": "Key Vault name to store the connection string"
              }
            },
            "databaseName": {
              "type": "string",
              "defaultValue": "todolistdb",
              "metadata": {
                "description": "Database name to create"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.DBforPostgreSQL/flexibleServers",
              "apiVersion": "2023-06-01-preview",
              "name": "[parameters('serverName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "sku": {
                "name": "[parameters('skuName')]",
                "tier": "[parameters('skuTier')]"
              },
              "properties": {
                "version": "[parameters('version')]",
                "administratorLogin": "[parameters('administratorLogin')]",
                "administratorLoginPassword": "[parameters('administratorPassword')]",
                "storage": {
                  "storageSizeGB": "[parameters('storageSizeGB')]",
                  "autoGrow": "Enabled"
                },
                "backup": {
                  "backupRetentionDays": 7,
                  "geoRedundantBackup": "Disabled"
                },
                "highAvailability": {
                  "mode": "Disabled"
                },
                "authConfig": {
                  "activeDirectoryAuth": "Disabled",
                  "passwordAuth": "Enabled"
                }
              }
            },
            {
              "type": "Microsoft.DBforPostgreSQL/flexibleServers/databases",
              "apiVersion": "2023-06-01-preview",
              "name": "[format('{0}/{1}', parameters('serverName'), parameters('databaseName'))]",
              "properties": {
                "charset": "UTF8",
                "collation": "en_US.utf8"
              },
              "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('serverName'))]"
              ]
            },
            {
              "type": "Microsoft.DBforPostgreSQL/flexibleServers/firewallRules",
              "apiVersion": "2023-06-01-preview",
              "name": "[format('{0}/{1}', parameters('serverName'), 'AllowAllAzureServicesAndResourcesWithinAzureIps')]",
              "properties": {
                "startIpAddress": "0.0.0.0",
                "endIpAddress": "0.0.0.0"
              },
              "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('serverName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2023-07-01",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), 'postgresql-connection-string')]",
              "properties": {
                "value": "[format('Host={0};Database={1};Username={2};Password={3};Include Error Detail=true', reference(resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('serverName')), '2023-06-01-preview').fullyQualifiedDomainName, parameters('databaseName'), parameters('administratorLogin'), parameters('administratorPassword'))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('serverName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2023-07-01",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), 'postgresql-host')]",
              "properties": {
                "value": "[reference(resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('serverName')), '2023-06-01-preview').fullyQualifiedDomainName]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('serverName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2023-07-01",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), 'postgresql-database')]",
              "properties": {
                "value": "[parameters('databaseName')]"
              }
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2023-07-01",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), 'postgresql-username')]",
              "properties": {
                "value": "[parameters('administratorLogin')]"
              }
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2023-07-01",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), 'postgresql-password')]",
              "properties": {
                "value": "[parameters('administratorPassword')]"
              }
            }
          ],
          "outputs": {
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('serverName'))]"
            },
            "serverName": {
              "type": "string",
              "value": "[parameters('serverName')]"
            },
            "fullyQualifiedDomainName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('serverName')), '2023-06-01-preview').fullyQualifiedDomainName]"
            },
            "databaseName": {
              "type": "string",
              "value": "[parameters('databaseName')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'keyVault')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "acaEnvironment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[variables('acaEnvironmentName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "logAnalyticsWorkspaceId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'logAnalytics'), '2022-09-01').outputs.workspaceId.value]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "11209172977983187537"
            }
          },
          "parameters": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "Azure Container Apps Environment for hosting container applications"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "logAnalyticsWorkspaceId": {
              "type": "string",
              "metadata": {
                "description": "Log Analytics workspace resource ID"
              }
            },
            "daprAIInstrumentationKey": {
              "type": "securestring",
              "defaultValue": "",
              "metadata": {
                "description": "Enable Dapr for the environment"
              }
            },
            "environmentType": {
              "type": "string",
              "defaultValue": "Consumption",
              "allowedValues": [
                "Consumption",
                "WorkloadProfiles"
              ],
              "metadata": {
                "description": "Environment type - Consumption or WorkloadProfiles"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.App/managedEnvironments",
              "apiVersion": "2024-03-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "appLogsConfiguration": {
                  "destination": "log-analytics",
                  "logAnalyticsConfiguration": {
                    "customerId": "[reference(parameters('logAnalyticsWorkspaceId'), '2023-09-01').customerId]",
                    "sharedKey": "[listKeys(parameters('logAnalyticsWorkspaceId'), '2023-09-01').primarySharedKey]"
                  }
                },
                "daprAIInstrumentationKey": "[if(not(empty(parameters('daprAIInstrumentationKey'))), parameters('daprAIInstrumentationKey'), null())]",
                "workloadProfiles": "[if(equals(parameters('environmentType'), 'WorkloadProfiles'), createArray(createObject('name', 'Consumption', 'workloadProfileType', 'Consumption')), null())]"
              }
            }
          ],
          "outputs": {
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.App/managedEnvironments', parameters('name'))]"
            },
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            },
            "defaultDomain": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.App/managedEnvironments', parameters('name')), '2024-03-01').defaultDomain]"
            },
            "staticIp": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.App/managedEnvironments', parameters('name')), '2024-03-01').staticIp]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'logAnalytics')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "containerApp",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[variables('acaAppName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "environment": {
            "value": "[parameters('environment')]"
          },
          "containerAppsEnvironmentId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'acaEnvironment'), '2022-09-01').outputs.id.value]"
          },
          "containerRegistryName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'containerRegistry'), '2022-09-01').outputs.name.value]"
          },
          "imageTag": {
            "value": "[parameters('imageTag')]"
          },
          "keyVaultName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'keyVault'), '2022-09-01').outputs.name.value]"
          },
          "postgresqlServerName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'postgresql'), '2022-09-01').outputs.serverName.value]"
          },
          "managedIdentityId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'containerRegistry'), '2022-09-01').outputs.managedIdentityId.value]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "334716642492258816"
            }
          },
          "parameters": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "Azure Container App for the TodoList application"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "environment": {
              "type": "string"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "containerAppsEnvironmentId": {
              "type": "string",
              "metadata": {
                "description": "Container Apps Environment resource ID"
              }
            },
            "containerRegistryName": {
              "type": "string",
              "metadata": {
                "description": "Container Registry name"
              }
            },
            "imageTag": {
              "type": "string",
              "metadata": {
                "description": "Container image tag to deploy"
              }
            },
            "keyVaultName": {
              "type": "string",
              "metadata": {
                "description": "Key Vault name for secrets"
              }
            },
            "postgresqlServerName": {
              "type": "string",
              "metadata": {
                "description": "PostgreSQL server name"
              }
            },
            "managedIdentityId": {
              "type": "string",
              "metadata": {
                "description": "Managed Identity resource ID for ACR access"
              }
            },
            "cpu": {
              "type": "int",
              "defaultValue": 250,
              "metadata": {
                "description": "CPU allocation (number of cores)"
              }
            },
            "memory": {
              "type": "string",
              "defaultValue": "512Mi",
              "metadata": {
                "description": "Memory allocation in Mi"
              }
            },
            "minReplicas": {
              "type": "int",
              "defaultValue": 1,
              "metadata": {
                "description": "Minimum number of replicas"
              }
            },
            "maxReplicas": {
              "type": "int",
              "defaultValue": 5,
              "metadata": {
                "description": "Maximum number of replicas"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.App/containerApps",
              "apiVersion": "2024-03-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', parameters('managedIdentityId'))]": {}
                }
              },
              "properties": {
                "managedEnvironmentId": "[parameters('containerAppsEnvironmentId')]",
                "configuration": {
                  "activeRevisionsMode": "Single",
                  "ingress": {
                    "external": true,
                    "targetPort": 8080,
                    "allowInsecure": false,
                    "traffic": [
                      {
                        "weight": 100,
                        "latestRevision": true
                      }
                    ]
                  },
                  "registries": [
                    {
                      "server": "[reference(resourceId('Microsoft.ContainerRegistry/registries', parameters('containerRegistryName')), '2023-07-01').loginServer]",
                      "identity": "[parameters('managedIdentityId')]"
                    }
                  ],
                  "secrets": [
                    {
                      "name": "postgresql-connection-string",
                      "keyVaultUrl": "[format('{0}secrets/postgresql-connection-string', reference(resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName')), '2023-07-01').vaultUri)]",
                      "identity": "[parameters('managedIdentityId')]"
                    }
                  ]
                },
                "template": {
                  "containers": [
                    {
                      "image": "[format('{0}/todolist:{1}', reference(resourceId('Microsoft.ContainerRegistry/registries', parameters('containerRegistryName')), '2023-07-01').loginServer, parameters('imageTag'))]",
                      "name": "todolist",
                      "env": [
                        {
                          "name": "ASPNETCORE_ENVIRONMENT",
                          "value": "[if(equals(parameters('environment'), 'prod'), 'Production', 'Development')]"
                        },
                        {
                          "name": "ASPNETCORE_URLS",
                          "value": "http://+:8080"
                        },
                        {
                          "name": "ConnectionStrings__DefaultConnection",
                          "secretRef": "postgresql-connection-string"
                        },
                        {
                          "name": "ApplicationInsights__ConnectionString",
                          "value": ""
                        }
                      ],
                      "resources": {
                        "cpu": "[div(parameters('cpu'), 1000)]",
                        "memory": "[parameters('memory')]"
                      },
                      "probes": [
                        {
                          "type": "Readiness",
                          "httpGet": {
                            "path": "/health",
                            "port": 8080,
                            "scheme": "HTTP"
                          },
                          "initialDelaySeconds": 10,
                          "periodSeconds": 10,
                          "timeoutSeconds": 5,
                          "failureThreshold": 3
                        },
                        {
                          "type": "Liveness",
                          "httpGet": {
                            "path": "/health",
                            "port": 8080,
                            "scheme": "HTTP"
                          },
                          "initialDelaySeconds": 30,
                          "periodSeconds": 30,
                          "timeoutSeconds": 10,
                          "failureThreshold": 3
                        }
                      ]
                    }
                  ],
                  "scale": {
                    "minReplicas": "[parameters('minReplicas')]",
                    "maxReplicas": "[parameters('maxReplicas')]",
                    "rules": [
                      {
                        "name": "http-rule",
                        "http": {
                          "metadata": {
                            "concurrentRequests": "100"
                          }
                        }
                      },
                      {
                        "name": "cpu-rule",
                        "custom": {
                          "type": "cpu",
                          "metadata": {
                            "type": "Utilization",
                            "value": "70"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.KeyVault/vaults/{0}', parameters('keyVaultName'))]",
              "name": "[guid(resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName')), resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity', parameters('containerRegistryName'))), 'Key Vault Secrets User')]",
              "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '4633458b-17de-408a-b874-0445c86b69e6')]",
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity', parameters('containerRegistryName'))), '2023-01-31').principalId]",
                "principalType": "ServicePrincipal"
              }
            }
          ],
          "outputs": {
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.App/containerApps', parameters('name'))]"
            },
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            },
            "applicationUrl": {
              "type": "string",
              "value": "[format('https://{0}', reference(resourceId('Microsoft.App/containerApps', parameters('name')), '2024-03-01').configuration.ingress.fqdn)]"
            },
            "fqdn": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.App/containerApps', parameters('name')), '2024-03-01').configuration.ingress.fqdn]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'acaEnvironment')]",
        "[resourceId('Microsoft.Resources/deployments', 'containerRegistry')]",
        "[resourceId('Microsoft.Resources/deployments', 'keyVault')]",
        "[resourceId('Microsoft.Resources/deployments', 'postgresql')]"
      ]
    }
  ],
  "outputs": {
    "applicationUrl": {
      "type": "string",
      "metadata": {
        "description": "The URL of the deployed application"
      },
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'containerApp'), '2022-09-01').outputs.applicationUrl.value]"
    },
    "acaEnvironmentName": {
      "type": "string",
      "metadata": {
        "description": "The name of the Container Apps Environment"
      },
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'acaEnvironment'), '2022-09-01').outputs.name.value]"
    },
    "acaAppName": {
      "type": "string",
      "metadata": {
        "description": "The name of the Container App"
      },
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'containerApp'), '2022-09-01').outputs.name.value]"
    },
    "acrName": {
      "type": "string",
      "metadata": {
        "description": "The name of the Azure Container Registry"
      },
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'containerRegistry'), '2022-09-01').outputs.name.value]"
    },
    "postgresqlServerName": {
      "type": "string",
      "metadata": {
        "description": "The name of the PostgreSQL server"
      },
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'postgresql'), '2022-09-01').outputs.serverName.value]"
    },
    "keyVaultName": {
      "type": "string",
      "metadata": {
        "description": "The name of the Key Vault"
      },
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'keyVault'), '2022-09-01').outputs.name.value]"
    },
    "logAnalyticsWorkspaceName": {
      "type": "string",
      "metadata": {
        "description": "The name of the Log Analytics workspace"
      },
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'logAnalytics'), '2022-09-01').outputs.name.value]"
    }
  }
}