name: Build and Test

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ develop ]
    paths-ignore:
      - '*.md'
      - '.github/**'
      - 'infra/**'

env:
  DOTNET_VERSION: '9.0.x'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Cache .NET packages
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Restore dependencies
      run: dotnet restore

    - name: Build application
      run: dotnet build --no-restore --configuration Release

    - name: Run tests
      run: dotnet test --no-build --configuration Release --verbosity normal --collect:"XPlat Code Coverage"

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: '**/TestResults/**/*'

    - name: Build Docker image (validation)
      run: |
        docker build -t todolist-app:ci-test .

    - name: Test Docker image
      run: |
        # Start container in background
        docker run -d --name todolist-test -p 8080:8080 \
          -e ASPNETCORE_ENVIRONMENT=Development \
          -e ConnectionStrings__SqliteConnection="Data Source=:memory:" \
          todolist-app:ci-test
        
        # Wait for application to start
        sleep 10
        
        # Test health endpoint
        curl -f http://localhost:8080/health || exit 1
        
        # Clean up
        docker stop todolist-test
        docker rm todolist-test

  security-scan:
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore dependencies
      run: dotnet restore

    - name: Run security audit
      run: dotnet list package --vulnerable --include-transitive

  code-quality:
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore dependencies
      run: dotnet restore

    - name: Format check
      run: dotnet format --verify-no-changes --verbosity diagnostic

    - name: Analyze code
      run: dotnet build --configuration Release --verbosity normal /p:TreatWarningsAsErrors=true
