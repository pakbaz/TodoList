name: Deploy Infrastructure & App

on:
  push:
    branches: [ main ]
    paths:
      - 'infra/**'
      - 'Dockerfile'
      - 'Program.cs'
      - 'TodoList.csproj'
      - 'Components/**'
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  TF_CLI_ARGS_apply: -auto-approve
  TF_IN_AUTOMATION: true
  ACR_IMAGE_NAME: todolist

jobs:
  terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: infra
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore & Build
        working-directory: .
        run: |
          dotnet restore
          dotnet build --configuration Release --no-restore

      - name: Run Tests (if any)
        working-directory: .
        run: |
          if ls *Tests*.csproj 1> /dev/null 2>&1; then
            dotnet test --no-build --configuration Release
          else
            echo "No test projects found - skipping"
          fi

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.5

      - name: Azure Login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ vars.AZURE_CLIENT_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        id: plan
        run: terraform plan -var "environment=dev" -out tfplan

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: terraform apply tfplan

      - name: Extract Outputs
        id: tfouts
        run: |
          echo "acr=$(terraform output -raw acr_login_server)" >> $GITHUB_OUTPUT
          echo "rg=$(terraform output -raw resource_group_name)" >> $GITHUB_OUTPUT
          echo "app=$(terraform output -raw container_app_name)" >> $GITHUB_OUTPUT
          echo "app_url=$(terraform output -raw container_app_url)" >> $GITHUB_OUTPUT

      - name: Derive ACR Name
        id: acrname
        run: |
          # login server like myacr.azurecr.io -> name before first dot
            ACR_NAME=$(echo "${{ steps.tfouts.outputs.acr }}" | cut -d'.' -f1)
            echo "acr_name=$ACR_NAME" >> $GITHUB_OUTPUT

      - name: Build & Push Image
        if: github.ref == 'refs/heads/main'
        run: |
          az acr login --name ${{ steps.acrname.outputs.acr_name }}
          docker build -t ${{ steps.tfouts.outputs.acr }}/${{ env.ACR_IMAGE_NAME }}:${{ github.sha }} ..
          docker push ${{ steps.tfouts.outputs.acr }}/${{ env.ACR_IMAGE_NAME }}:${{ github.sha }}

      - name: Update Container App Image
        if: github.ref == 'refs/heads/main'
        run: |
          az containerapp update \
            --name ${{ steps.tfouts.outputs.app }} \
            --resource-group ${{ steps.tfouts.outputs.rg }} \
            --image ${{ steps.tfouts.outputs.acr }}/${{ env.ACR_IMAGE_NAME }}:${{ github.sha }}
          echo "Application URL: https://${{ steps.tfouts.outputs.app_url }}" 
